plugins {
    id 'java-library'
    id 'checkstyle'
    id 'com.github.spotbugs' version '2.0.0'
    id 'jacoco'
}

group 'gg.sep'
version '0.1.0-SNAPSHOT'

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    sepBuildConfig
}

dependencies {
    // core dependencies
    implementation "com.github.Seputaes:result:1.1.+"

    implementation 'com.google.code.gson:gson:2.8.+'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'com.squareup.retrofit2:retrofit:2.6.+'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.+'
    implementation "org.apache.logging.log4j:log4j-api:2.12.+"
    implementation "org.apache.logging.log4j:log4j-core:2.12.+"

    // test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
    testImplementation "org.mockito:mockito-core:3.0.0"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.2.1")

    // build dependencies
    sepBuildConfig "com.github.Seputaes:sep-java-build-config:0.2.0"
    compileOnly "com.github.spotbugs:spotbugs-annotations:3.1.12"
    compileOnly "org.projectlombok:lombok:1.18.+"
    annotationProcessor "org.projectlombok:lombok:1.18.+"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.+"
}

task extractFile(type: Copy) {
    from {
        zipTree(configurations.sepBuildConfig.singleFile)
    }
    into "${buildDir}/"
    include "configuration/"
}

checkstyle {
    ignoreFailures false
    configFile file("${buildDir}/configuration/checkstyle/checkstyle.xml")
    configDir file("${buildDir}/configuration/checkstyle")
    toolVersion '8.22'
}
checkstyleMain.dependsOn extractFile
checkstyleTest.dependsOn extractFile

spotbugs {
    ignoreFailures false
    toolVersion '3.1.12'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

jacocoTestReport {
    reports {
        html.enabled = true
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.70
            }
        }
    }
}
jacocoTestReport.dependsOn test
check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport

// unchecked and deprecation should produce warnings
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    useJUnitPlatform()
}
